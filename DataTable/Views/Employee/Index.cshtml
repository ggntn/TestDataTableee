@model DataTable.ViewModel.TestViewModel

@{
    ViewData["Title"] = "Employee List 2";
    Layout = "_Layout";
}


@* Button *@
<h2>Employee List <button onclick="openAddModal()" type="button" class="btn btn-primary" data-toggle="modal" data-target="#MyModal"><i class="glyphicon glyphicon-plus-sign"></i> Add </button></h2>

</br>
<!-- Search form -->
<div class="container">
    <div class="form-group">
        <div class="input-group">
            @*<i class="fas fa-search" aria-hidden="true"></i>*@
            <span class="input-group-addon" onclick="ReloadDatatableSearch()" id=""><i class="glyphicon glyphicon-search"></i></span>
            <input value="" id="Search" class="form-control form-control-sm ml-3 w-75" type="text" placeholder="Search" aria-label="Search" name="Search" />
        </div>
    </div>
</div>
</br>

@* Data Table *@
<table id="employeeTable" class="table table-striped table-bordered" style="width:100%">
    <thead>
        <tr>
            <th>Name</th>
            <th>Position</th>
            <th>Office</th>
            <th>Age</th>
            <th>Salary</th>
            <th>Sex</th>
            <th>Update Delete</th>
            <th>NameGen</th>
            <th>dtmDate</th>
        </tr>
    </thead>
</table>


@*Create Pop modal For Add n Edit Empoyee*@
<div class=" modal fade" id="MyModal" aria-labelledby="MyModal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 id="ModalTitle">Test</h4>
            </div>
            <div class="modal-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <form id="form">
                    <fieldset id="SubmitForm">
                        @Html.HiddenFor(m => m.EmployeeId, new { @id = "EmpId" })
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Name, new { @id = "EmpName", @class = "form-control", @placeholder = "Name" })
                            @*  @Html.ValidationMessageFor(m => m.Name, "", new { @class = "error" })*@
                        </div>
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Position, new { @id = "EmpPosition", @class = "form-control", @placeholder = "Position" })
                        </div>
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Office, new { @id = "EmpOffice", @class = "form-control", @placeholder = "Office" })
                        </div>
                        <div class="form-group">
                            @Html.DropDownListFor(m => m.Age, Model.AgeList, new { @id = "EmpAge", @class = "form-control", @placeholder = "--Select Age--" })
                        </div>
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Salary, new { @id = "EmpSalary", @class = "form-control", @placeholder = "Salary" })
                        </div>
                        <div class="form-group">
                            <input type="date" name="dtmDate" id="datePicker">
                            <input type="button" value="date" id="datebtn">
                            <p class="getDate"></p>
                        </div>
                        <div class="form-group">
                            @Html.RadioButtonFor(x => x.Sex, "Male", new { @id = "EmpSex" })
                            @Html.Label("Male")

                            @Html.RadioButtonFor(x => x.Sex, "Female", new { @id = "EmpSex2" })
                            @Html.Label("Female")
                        </div>

                        <div class=" form-group">
                            @foreach (var row in Model.GenderList)
                            {
                            <label><input id="@row.GenderId" type="radio" name="gender" value="@row.GenderId">@row.Name</label>
                            }
                        </div>
                    </fieldset>
                </form>

            </div>

            <div class="modal-footer">
                <div class="form-group">
                    <button type="submit" class="btn btn-danger btn-block" id="ConfirmEdit">Save</button>
                </div>
            </div>

        </div>
    </div>
</div>

@*Create Pop modal For Delete Empoyee*@
<div class=" modal fade" id="Delete" tabindex="-1" role="dialog" aria-labelledby="Delete" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4>Delete Student Record</h4>
            </div>
            <div class="modal-body">
                <form id="form">
                    <fieldset id="SubmitForm">
                        @Html.HiddenFor(m => m.EmployeeId, new { @id = "EmpId" })
                        <h4>Delete?</h4>
                    </fieldset>
                </form>
            </div>
            <div class="modal-footer">
                <a href="#" class="btn btn-primary" data-dismiss="modal">Cancel</a>
                <a href="#" class="btn btn-danger" id="ConfirmDelete">Delete</a>
            </div>
        </div>
    </div>
</div>




@section scripts

{


<script>
    let datatableSearch;

    function testClicked() {
        $('.getDate').html($('#datePicker').val());
    }



    //modal
    function openAddModal() {
        _clearform();
        $('#MyModal').show()

    }


    //clear text
    function _clearform() {
        $('#EmpId').val('')
        $("#EmpName").val('')
        $("#EmpOffice").val('')
        $("#EmpPosition").val('')
        $("#EmpAge").val('0')
        $("#EmpSalary").val('')
        $('#EmpSex').prop('checked', false);
        $('#EmpSex2').prop('checked', false);
    }

    //run function
    $(document).ready(function () {
        DataSearchUser();
        let now = new Date();

        let day = ("0" + now.getDate()).slice(-2);
        let month = ("0" + (now.getMonth() + 1)).slice(-2);

        let today = (day) + "-" + (month) + "-" + now.getFullYear();


        $('#datePicker').val(today);

        $('#datebtn').click(function () {

            testClicked();

        });
        $(document).keypress(
            function (event) {
                if (event.which == '13') {
                    ReloadDatatableSearch();
                }
            }
        );
    });

    //Reload datatable
    function ReloadDatatableSearch() {
        datatableSearch.ajax.reload();
    }
    function Search() {
        datatableSearch.ajax.reload();
    }

    //datatable
    function DataSearchUser() {

        datatableSearch = $('#employeeTable').DataTable(
            {

                searching: false,

                "ajax": {
                    "url": "/Employee/GetList",
                    "type": "GET",
                    data: function (d) {
                        d.searchbox = $("#Search").val();
                    },
                },

                dataSrc: function (data) {
                    console.log(data)
                    return data;
                },


                //column data
                "columns": [

                    { "data": "Name" },
                    { "data": "Position" },
                    { "data": "Office" },
                    { "data": "Age" },
                    { "data": "Salary" },
                    { "data": "Sex" },
                    {
                        "data": "EmployeeId",
                        "render": function (EmployeeId, type, full, meta) {
                            //debugger
                            return '<a onclick =Edit("' + EmployeeId + '")  class="btn btn-success" data-toggle="modal" data-target="#MyModal"><i class="glyphicon glyphicon-pencil"></i>Edit</a>' +
                                '  <a onclick =Delete("' + EmployeeId + '")  class="btn btn-danger" data-toggle="modal" data-target="#Delete"><i class="glyphicon glyphicon-pencil"></i>Delete</a>';

                        }
                    },
                    { "data": "NameGen" },
                    { "data": "dtmDate" }

                ],

                ////head search box
                //"dom": '<"top"l> rt < "bottom"ip >< "clear" >',
                //"fnInitComplete": function (oSettings, json) {
                //    addSearchControl(json);
                //},

                "language": {
                    "emptyTable": "No data found,Please click on <b>Add New</b> Button "
                },

                //"searching": false,
                //"serverSide": "true",
                //"order": [0, "asc"],
                //"processing": "true",

                "columnDefs":
                    [
                        {
                            "targets": 0,
                            "visible": true
                        },
                        {
                            "targets": 1,
                            "visible": true
                        },
                        {
                            "targets": 2,
                            "visible": true
                        },
                        {
                            "targets": 3,
                            "visible": true
                        },
                        {
                            "targets": 4,
                            "visible": true

                        },
                        {
                            "targets": 5,
                            "visible": true

                        },
                        //{
                        //    "targets": 5,
                        //    "data": "null",
                        //    "defaultContent": '<button id="editar" class="btn btn-sm btn-warning"><span class="glyphicon glyphicon-edit"></span></button>&nbsp;'
                        //}

                    ]
            });


        //     //search head box
        //function addSearchControl(json) {
        //    $("#employeeTable thead").append($("#employeeTable thead tr:first").clone());
        //    $("#employeeTable thead tr:eq(1) th").each(function (index) {
        //        $(this).replaceWith('<th><input type="text" placeholder="Search ' + $(this).html() + '"></input></th>');
        //        var searchControl = $("#employeeTable thead tr:eq(1) th:eq(" + index + ") input ");
        //        searchControl.on('keyup', function () {
        //            datatableSearch.column(index).search(searchControl.val()).draw();
        //        });

        //    });
        //};



    };


    //Edit
    function Edit(EmployeeId) {

        var clientData = {
            EmployeeId: EmployeeId
        }

        $.ajax({
            type: "GET",
            url: '/Employee/GetEmployeeById',
            dataType: 'json',
            cache: false,
            data: clientData,
            success: function (data) {
                console.log(data);
                $("#EmpName").val(data.Name);
                $("#EmpId").val(data.EmployeeId);
                $("#EmpPosition").val(data.Position);
                $("#EmpOffice").val(data.Office);
                $("#EmpAge").val(data.Age);
                $("#EmpSalary").val(data.Salary);

                if (data.Sex == "Female    ") {
                    $('#EmpSex2').prop('checked', true);
                }
                else
                    $('#EmpSex').prop('checked', true);

                if (data.GenderId == 1) {
                    $('#1').prop('checked', true);
                } else if (data.GenderId == 2) {
                    $('#2').prop('checked', true);
                } else

                    $('#3').prop('checked', true);




            }
        });

    }
    $('#ConfirmEdit').click(function () {


        var editdata = $("#SubmitForm").serialize();
        alert(editdata)
        console.log(editdata)


        var test=$('.getDate').html($('#datePicker').val());
        console.log(test)

        var Name = $("#EmpName").val();
        var Position = $("#EmpPosition").val();
        var Office = $("#EmpOffice").val();
        var Age = $("#EmpAge").val();
        var Salary = $("#EmpSalary").val();

        if (Name == "" || Name == undefined) {
            alert("enter Name")
            return false;
        }
        if (Position == "" || Position == undefined) {
            alert("enter Position")
            return false;
        }
        if (Office == "" || Office == undefined) {
            alert("enter Office")
            return false;
        }
        if (Age == "" || Age == undefined) {
            alert("enter Age")
            return false;
        }
        if (Salary == "" || Salary == undefined) {
            alert("enter Salary")
            return false;
        }

        //if (!$("#SubmitForm").valid()) {
        //    return false;
        //}


        $.ajax({
            type: "POST",
            url: '/Employee/SaveEmployeeId',
            dataType: 'json',
            data: editdata,
            success: function (result) {

                //alert(result)
                window.location.href = "/Employee/Index";
                $("#MyModal").modal("hide");
            }
        });
    });

    //Delete
    function Delete(EmployeeId) {
        $("#EmpId").val(EmployeeId);
        $("#Delete").show
    }
    $('#ConfirmDelete').click(function () {
        var delId = $("#EmpId").val();
        $.ajax({
            type: "POST",
            url: '/Employee/DeleteId',
            //dataType: 'json',
            data: { EmployeeId: delId },
            success: function (result) {
                alert(result)
                location.reload();
                $("#Delete").modal("hide");

            }
        });
    });



</script>
}
